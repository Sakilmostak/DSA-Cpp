#include<iostream>
#include<stack>

using namespace std;

class queue {
	stack<int> s1;
	stack<int> s2;
public:

	void enqueue(int x){
		s1.push(x);
	}

	void dequeue(){
		if(s1.empty() and s2.empty()){
			cout<<"Queue is empty"<<endl;
			return;
		}
		if(s2.empty()){
			while(!s1.empty()){
				s2.push(s1.top());
				s1.pop();
			}
		}
		s2.pop();

		if(s1.empty()){
			while(!s2.empty()){
				s1.push(s2.top());
				s2.pop();
			}
		}
	}

	int peek(){
		if(s1.empty() and s2.empty()){
			cout<<"Queue is empty"<<endl;
			return -1;
		}
		if(s2.empty()){
			while(!s1.empty()){
				s2.push(s1.top());
				s1.pop();
			}
		}
		int ans=s2.top();

		if(s1.empty()){
			while(!s2.empty()){
				s1.push(s2.top());
				s2.pop();
			}
		}

		return ans;
	}

	bool empty(){
		if(s1.empty() and s2.empty()){
			return true;
		}
		return false;
	}
};

int main(){

	queue q;

	q.enqueue(1);
	q.enqueue(2);
	q.enqueue(3);
	q.enqueue(4);
	q.enqueue(5);
	cout<<q.peek()<<endl;
	q.dequeue();
	q.dequeue();
	cout<<q.peek()<<endl;

	return 0;

}