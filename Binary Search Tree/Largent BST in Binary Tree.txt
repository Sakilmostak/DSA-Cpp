#include<iostream>
#include<climits>
using namespace std;

struct node{
	int data;
	node* right;
	node* left;
	node(int val){
		data=val;
		right=NULL;
		left=NULL;
	}
};

struct Info{
	int size;
	int max;
	int min;
	int ans;
	bool isBST;
};

Info largestBSTinBT(node* root){
	if(root==NULL){
		return {0, INT_MIN, INT_MAX, 0, true};
	}
	if(root->left==NULL && root->right==NULL){
		return {1,root->data, root->data, 1, true};
	}

	Info leftInfo= largestBSTinBT(root->left);
	Info rightInfo= largestBSTinBT(root->right);

	Info curr;
	curr.size= (1+leftInfo.size + rightInfo.size);

	if(leftInfo.isBST && rightInfo.isBST && leftInfo.max<root->data && rightInfo.min>root->data){
		curr.min= min(leftInfo.min, min(rightInfo.min, root->data));
		curr.max= max(leftInfo.max, max(rightInfo.max, root->data));

		curr.ans= curr.size;
		curr.isBST= true;

		return curr;
	}

	curr.ans= max(leftInfo.ans, rightInfo.ans);
	curr.isBST= false;
	return curr;
}

int main(){
	struct node* root1= new node(12);
	root1->left=new node(9);
	root1->right=new node(15);
	root1->left->left=new node(5);
	root1->left->right= new node(10);

	cout<<"Largest BST in BT is : "<<largestBSTinBT(root1).ans<<endl;

	return 0;
}