#include<iostream>
using namespace std;

struct node{
	int data;
	node* right;
	node* left;

	node(int val){
		data=val;
		left=NULL;
		right=NULL;
	}

};


node* LCA(node* root, int n1, int n2){
	if(root==NULL){
		return NULL;
	}

	if(root->data==n1 || root->data==n2){
		return root;
	}

	node* left=LCA(root->left, n1, n2);
	node* right=LCA(root->right, n1, n2);

	if(right && left){
		return root;
	}
	if(left!=NULL){
		return left;
	}
	return right;
}

int findDist(node* root, int key, int dist){
	if(root==NULL){
		return -1;
	}
	if(root->data==key){
		return dist;
	}

	int left= findDist(root->left, key, dist+1);
	if(left!=-1){
		return left;
	}
	return findDist(root->right, key, dist+1);
}

int distBtwNodes(node* root, int n1, int n2){
	node* lca= LCA(root, n1,n2);

	int d1= findDist(lca, n1, 0);
	int d2= findDist(lca, n2, 0);

	return d1+d2;
}

int main(){
	struct node* root= new node(1);
	root->left= new node(2);
	root->right=new node(3);
	root->left->left= new node(4);
	root->left->right= new node(5);
	root->right->left= new node(6);
	root->right->right= new node(7);
	root->right->left->left= new node(8);
	root->right->left->right= new node(9);
	
	int n1=4;
	int n2=8;

	cout<<"The distance between two given nodes is: "<<distBtwNodes(root, n1,n2)<<endl;

	return 0;
}